KeepAliveTimeout 75

# The socket directory must be readable by the daemon process user
WSGISocketPrefix /var/run/wsgi
WSGIDaemonProcess snowflakes user=snowflakes group=snowflakes processes=6 threads=1 display-name=snowflakes-app
# No need for embedded interpreters
WSGIRestrictEmbedded On
# Pass the authorization header so basic auth works
WSGIPassAuthorization On

# Indexer. Configure first to avoid catchall '/'
WSGIDaemonProcess snovault-indexer user=snowflakes group=snowflakes processes=1 threads=1 display-name=snovault-indexer
WSGIScriptAlias /_indexer /srv/snowflakes/parts/production-indexer/wsgi process-group=snovault-indexer application-group=%{GLOBAL}


# https://github.com/GrahamDumpleton/mod_wsgi/issues/2
SetEnvIf Request_Method HEAD X_REQUEST_METHOD=HEAD

LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %{X-Stats}o&server_time=%D" vhost_combined_stats

<Directory /srv/snowflakes/parts/production-indexer>
    Order deny,allow
    Allow from all
    <IfModule access_compat_module>
        Require all granted
    </IfModule>
</Directory>

<Directory /srv/snowflakes/parts/production-fileindexer>
    Order deny,allow
    Allow from all
    <IfModule access_compat_module>
        Require all granted
    </IfModule>
</Directory>


# Specifying process-group and application-group here ensures processes are started on httpd start
WSGIScriptAlias / /srv/snowflakes/parts/production/wsgi process-group=snowflakes application-group=%{GLOBAL}

<Directory /srv/snowflakes/parts/production>
    Order deny,allow
    Allow from all
    <IfModule access_compat_module>
        Require all granted
    </IfModule>
    # Limit upload size to 500 MB (375MB before base64 encoding)
    LimitRequestBody 524288000
    # Apache adds -gzip to outgoing ETag in mod_deflate, remove inbound.
    # https://issues.apache.org/bugzilla/show_bug.cgi?id=39727
    RequestHeader edit If-Match    -gzip\"$    \"
    RequestHeader edit If-None-Match    -gzip\"$    \"

    # CORS support
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, HEAD"
    Header always set Access-Control-Allow-Headers "Accept, Origin, Range, X-Requested-With"
    Header always set Access-Control-Expose-Headers: "Content-Length, Content-Range, Content-Type"

    # CORS preflight
    RewriteCond %{REQUEST_METHOD} OPTIONS
    RewriteRule ^ - [redirect=200,last]
</Directory>

# Serve static resources directly from Apache
Alias /static /srv/snowflakes/src/snowflakes/static
Alias /favicon.ico /srv/snowflakes/src/snowflakes/static/img/favicon.ico

<Directory /srv/snowflakes/src/snowflakes/static>
    Order deny,allow
    Allow from all
    <IfModule access_compat_module>
        Require all granted
    </IfModule>
</Directory>

# Compress JSON responses.
AddOutputFilterByType DEFLATE application/javascript application/json text/css text/html text/javascript

# Source map type (to enable compression)
<FilesMatch \.js\.map$>
    ForceType application/json
</FilesMatch>

RewriteEngine On

# Exclude robots from all but production site
#RewriteCond %{HTTP_HOST} =www.encodeproject.org
RewriteRule ^/robots\.txt$  /static/robots.txt  [last,passthrough]
RewriteRule ^/robots\.txt$  /static/dev-robots.txt  [last,passthrough]

# Google site verification
RewriteRule ^/google[0-9a-f]+.html$  /static$0  [last,passthrough]

# Proxy internal redirects for file downloads
# TODO this should probably be removed
SSLProxyEngine On
RewriteCond %{ENV:REDIRECT_STATUS} .
RewriteRule ^/_proxy/(.+)$  $1  [proxy]

# Forbid PUT/PATCH/POST to plain http
RewriteCond %{HTTP:X-Forwarded-Proto} =http
RewriteCond %{REQUEST_METHOD} !^(GET|HEAD)$
#RewriteCond %{HTTP_HOST} ^(www\.encodeproject\.org|test\.encodedcc\.org)$
RewriteRule ^ - [forbidden]

# Forbid basic auth to plain http
RewriteCond %{HTTP:X-Forwarded-Proto} =http
RewriteCond %{HTTP:Authorization} .
#RewriteCond %{HTTP_HOST} ^(www\.encodeproject\.org|test\.encodedcc\.org)$
RewriteRule ^ - [forbidden]

ErrorDocument 403 "Forbidden. HTTPS required for authenticated access."

# Redirect no-www to https://www.encodeproject.org - TODO obviously use your site
#RewriteCond %{HTTP_HOST} =encodeproject.org
#RewriteCond %{REQUEST_METHOD} ^(GET|HEAD)$
#RewriteCond %{HTTP:Authorization} !.
#RewriteRule ^ https://www.encodeproject.org%{REQUEST_URI} [redirect=permanent,last,qsappend]

# Redirect to https TODO again site specific
#RewriteCond %{HTTP:X-Forwarded-Proto} =http
#RewriteCond %{HTTP_HOST} ^(www\.encodeproject\.org|test\.encodedcc\.org)$
#RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [redirect=permanent,last,qsappend]

